# selekt Configuration
# This is a development configuration file

# Server configuration
SELEKT_PORT=3010
SELEKT_ADMIN=admin@selekt.com
SELEKT_ADMIN_PASSWORD=admin
SELEKT_APP_LOG_LEVEL=debug
SELEKT_BASE_URL=/selekt
SELEKT_DB_PATH=/Users/harshlohiya/setu/datadynamics/frontend/server/db
SELEKT_WEB_LOG_LEVEL=debug
SELEKT_SERVICE_TOKEN_SECRET=secr3t

# Database configuration (using SQLite for development)
SELEKT_BACKEND_DB_URI=sqlite:///Users/harshlohiya/setu/datadynamics/frontend/server/db/selekt.db
SELEKT_DB_AUTOMIGRATE=true

# Session configuration
SELEKT_COOKIE_SECRET=your-secret-key
SELEKT_SESSION_MINUTES=60

# Security configuration
SELEKT_USERPASS_AUTH_DISABLED=false
SELEKT_GOOGLE_AUTH_DISABLED=true
SELEKT_SAML_AUTH_DISABLED=true
SELEKT_LDAP_AUTH_DISABLED=true
SELEKT_OPENID_AUTH_DISABLED=true
SELEKT_OAUTH_AUTH_DISABLED=true

# Default connection configuration
SELEKT_DEFAULT_CONNECTION_ID=devdbdriverid123
SELEKT_CONNECTIONS__devdbdriverid123__driver=sqlite
SELEKT_CONNECTIONS__devdbdriverid123__name=dev connection from config
SELEKT_CONNECTIONS__devdbdriverid123__filename=/Users/harshlohiya/setu/datadynamics/frontend/server/test/fixtures/sales.sqlite

# OIDC connect config
# Implementation used okta tutorial for testing/dev
# https://developer.okta.com/blog/2018/05/18/node-authentication-with-passport-and-oidc
# allowed domains not necessary, but is honored for oidc
# 
# SELEKT_ALLOWED_DOMAINS = "gmail.com other.com"
# PUBLIC_URL = "http://localhost:3010"
# SELEKT_OIDC_CLIENT_ID = CLIENT_ID
# SELEKT_OIDC_CLIENT_SECRET = SECRET
# SELEKT_OIDC_ISSUER = "https://dev-350224.okta.com/oauth2/default"
# SELEKT_OIDC_SCOPE = "openid profile email roles"
# If below are provided, the old passport-openidconnect implementation is used
# If the below are NOT provided, the new openid-client implementation is used 
# SELEKT_OIDC_AUTHORIZATION_URL = "https://dev-350224.okta.com/oauth2/default/v1/authorize"
# SELEKT_OIDC_TOKEN_URL = "https://dev-350224.okta.com/oauth2/default/v1/token"
# SELEKT_OIDC_USER_INFO_URL = "https://dev-350224.okta.com/oauth2/default/v1/userinfo"

# LDAP testing config
# This docker image can be used to test LDAP flow
# https://github.com/rroemhild/docker-test-openldap

# Disable local userpass auth
# SELEKT_USERPASS_AUTH_DISABLED=true
# SELEKT_LDAP_AUTH_ENABLED=true
# SELEKT_LDAP_AUTO_SIGN_UP=true
# # Do not allow any login that does not already exist or match RBAC filter
# SELEKT_LDAP_DEFAULT_ROLE = ""
# # Below the details depend on setup
# SELEKT_LDAP_URL="ldap://localhost:389"
# SELEKT_LDAP_BIND_DN="cn=admin,dc=planetexpress,dc=com"
# SELEKT_LDAP_PASSWORD="GoodNewsEveryone"
# # LDAP search filter, e.g. `(uid={{username}})` in OpenLDAP or `(sAMAccountName={{username}})` in ActiveDirectory. 
# # Use literal {{username}} to have the given username used in the search.
# # A fancier example might be something like (&(|(memberOf=cn=selekt-editors,dc=example,dc=com)(memberOf=cn=selekt-admins,dc=example,dc=com))(uid={{username}}))
# SELEKT_LDAP_SEARCH_FILTER="(uid={{username}})"
# SELEKT_LDAP_SEARCH_BASE="dc=planetexpress,dc=com"
# # RBAC from LDAP
# # Assuming the docker-test-openldap setup, hermes/hermes becomes an admin, bender/bender becomes an editor
# SELEKT_LDAP_ROLE_ADMIN_FILTER = "(memberOf=cn=admin_staff,ou=people,dc=planetexpress,dc=com)"
# SELEKT_LDAP_ROLE_EDITOR_FILTER = "(memberOf=cn=ship_crew,ou=people,dc=planetexpress,dc=com)"